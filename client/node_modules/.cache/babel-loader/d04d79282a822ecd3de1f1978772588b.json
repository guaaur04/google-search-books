{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\auric\\\\code\\\\google-search-books\\\\client\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"../components/Nav\";\nimport Hero from \"../components/Hero\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { List, ListItem } from \"../components/List\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({}); // const {userSearch} = this.state;\n  // Load all books and store them with setBooks\n\n  useEffect(() => {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(res => setBooks(res.data)).catch(err => console.log(err));\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(res => loadBooks()).catch(err => console.log(err));\n  }\n\n  ;\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.saveBook({\n        title: formObject.title,\n        authors: formObject.authors,\n        description: formObject.description,\n        image: formObject.image,\n        link: formObject.link\n      }).then(res => loadBooks()).catch(err => console.log(err));\n    }\n  }\n\n  ; // axios.post(url, \"/\" (userSearch) )\n  // .then((result) => {\n  //   console.log(result, \"We're getting somewhere\");\n  // }); \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleInputChange,\n        name: \"title\",\n        placeholder: \"Book (required)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormBtn // disabled={!(formObject.author && formObject.title)}\n      , {\n        onClick: handleFormSubmit,\n        children: \"Book Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: books.map(book => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/saved/\" + book._id,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [book.title, \" by \", book.authors]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n            onClick: () => deleteBook(book._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, book._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"UqfM0h0i9og713UvocqePx2+GPk=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/auric/code/google-search-books/client/src/pages/Search.js"],"names":["React","useState","useEffect","Nav","Hero","Card","DeleteBtn","Input","FormBtn","List","ListItem","Link","API","Search","books","setBooks","formObject","setFormObject","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","title","saveBook","authors","description","image","link","map","book","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"../components/Nav\";\r\nimport Hero from \"../components/Hero\";\r\nimport Card from \"../components/Card\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n\r\n\r\nfunction Search() {\r\n\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n  const [formObject, setFormObject] = useState({})\r\n  // const {userSearch} = this.state;\r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  // Loads all books and sets them to books\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res =>\r\n        setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  function deleteBook(id) {\r\n    API.deleteBook(id)\r\n      .then(res => loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({ ...formObject, [name]: value })\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (formObject.title) {\r\n      API.saveBook({\r\n        title: formObject.title,\r\n        authors: formObject.authors,\r\n        description: formObject.description,\r\n        image: formObject.image,\r\n        link: formObject.link\r\n      })\r\n        .then(res => loadBooks())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  // axios.post(url, \"/\" (userSearch) )\r\n  // .then((result) => {\r\n  //   console.log(result, \"We're getting somewhere\");\r\n  // }); \r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Hero />\r\n      <h1>Search</h1>\r\n\r\n      <form>\r\n        <Input\r\n          onChange={handleInputChange}\r\n          name=\"title\"\r\n          placeholder=\"Book (required)\"\r\n\r\n        />\r\n        <FormBtn\r\n          // disabled={!(formObject.author && formObject.title)}\r\n          onClick={handleFormSubmit}\r\n        >\r\n          Book Search\r\n              </FormBtn >\r\n\r\n        <Card />\r\n\r\n\r\n        <List>\r\n          {books.map(book => (\r\n            <ListItem key={book._id}>\r\n              <Link to={\"/saved/\" + book._id}>\r\n                <strong>\r\n                  {book.title} by {book.authors}\r\n                </strong>\r\n              </Link>\r\n              <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n\r\n      </form>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}