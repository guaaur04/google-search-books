{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\auric\\\\code\\\\google-search-books\\\\client\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"../components/Nav\";\nimport Hero from \"../components/Hero\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { List, ListItem } from \"../components/List\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  // // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({\n    title: \"\",\n    authors: \"\",\n    description: \"\",\n    image: \"\",\n    link: \"\"\n  }); // Load all books and store them with setBooks\n\n  useEffect(() => {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(res => setBooks(res.data)).catch(err => console.log(err));\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(res => loadBooks()).catch(err => console.log(err));\n  }\n\n  ;\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.saveBook({\n        title: formObject.title,\n        authors: formObject.authors,\n        description: formObject.description,\n        image: formObject.image,\n        link: formObject.link\n      }).then(res => loadBooks()).catch(err => console.log(err));\n    }\n  }\n\n  ; //Should save to array of users books in DB\n  // I am getting a 404 api/books \n\n  axios.post(\"/api/books\", {\n    formObject\n  }).then(result => {\n    console.log(result, \"We're getting somewhere\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleInputChange,\n        name: \"title\",\n        placeholder: \"Book (required)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormBtn // disabled={!(formObject.author && formObject.title)}\n      , {\n        onClick: handleFormSubmit,\n        children: \"Book Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: books.map(book => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/saved\" + book._id,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [book.title, \" by \", book.authors]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n            onClick: () => deleteBook(book._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, book._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Search, \"FugZAbmnQT9EIjk3PndbHx+U7dI=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/auric/code/google-search-books/client/src/pages/Search.js"],"names":["React","useState","useEffect","Nav","Hero","Card","DeleteBtn","Input","FormBtn","List","ListItem","Link","API","axios","Search","books","setBooks","formObject","setFormObject","title","authors","description","image","link","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","saveBook","post","result","map","book","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"../components/Nav\";\r\nimport Hero from \"../components/Hero\";\r\nimport Card from \"../components/Card\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport axios from \"axios\";\r\n\r\nfunction Search() {\r\n\r\n  // // Setting our component's initial state\r\n  const[books, setBooks] = useState([])\r\n  const[formObject, setFormObject] = useState({\r\n     title: \"\",\r\n     authors: \"\",\r\n     description: \"\",\r\n     image: \"\",\r\n     link: \"\"\r\n   })\r\n \r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  // Loads all books and sets them to books\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res =>\r\n        setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  function deleteBook(id) {\r\n    API.deleteBook(id)\r\n      .then(res => loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({ ...formObject, [name]: value })\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (formObject.title) {\r\n      API.saveBook({\r\n        title: formObject.title,\r\n        authors: formObject.authors,\r\n        description: formObject.description,\r\n        image: formObject.image,\r\n        link: formObject.link\r\n      })\r\n        .then(res => loadBooks())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n//Should save to array of users books in DB\r\n// I am getting a 404 api/books \r\n\r\n  axios.post(\"/api/books\", {formObject} )\r\n  .then((result) => {\r\n    console.log(result, \"We're getting somewhere\");\r\n  })\r\n\r\n  \r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <Hero />\r\n        <h1>Search</h1>\r\n\r\n        <form>\r\n          <Input\r\n            onChange={handleInputChange}\r\n            name=\"title\"\r\n            placeholder=\"Book (required)\"\r\n\r\n          />\r\n          <FormBtn\r\n            // disabled={!(formObject.author && formObject.title)}\r\n            onClick={handleFormSubmit}\r\n          >\r\n            Book Search\r\n                </FormBtn >\r\n\r\n          <Card />\r\n\r\n\r\n          <List>\r\n            {books.map(book => (\r\n              <ListItem key={book._id}>\r\n                <Link to={\"/saved\" + book._id}>\r\n                  <strong>\r\n                    {book.title} by {book.authors}\r\n                  </strong>\r\n                </Link>\r\n                <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}